type User {
  id: ID! @id
  name: String!
  email: String! @unique
  password: String!
  posts: [Post!]! @relation(name: "PostToUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentToUser", onDelete: CASCADE)
  pinnedPosts: [Pinned!]! @relation(name: "PinnedToUser", onDelete: CASCADE)
  featuredPost: Featured @unique @relation(name: "FeaturedToUser", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Pinned {
  id: ID! @id
  user: User! @relation(link: INLINE, name: "PinnedToUser")
  post: Post! @relation(link: INLINE, name: "PinnedToPost")
}

type Featured {
  id: ID! @id
  user: User! @relation(link: INLINE, name: "FeaturedToUser")
  post: Post! @relation(link: INLINE, name: "FeaturedToPost")
}

type Post {
  id: ID! @id
  title: String!
  body: String!
  published: Boolean @default(value: false)
  allowComments: Boolean @default(value: true)
  author: User! @relation(name: "PostToUser", onDelete: SET_NULL)
  comments: [Comment!]! @relation(name: "CommentToPost", onDelete: CASCADE)
  pinGazers: [Pinned!]! @relation(name: "PinnedToPost", onDelete: CASCADE)
  featuredBy: Featured @unique @relation(name: "FeaturedToPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  post: Post! @relation(name: "CommentToPost", onDelete: SET_NULL)
  author: User! @relation(name: "CommentToUser", onDelete: SET_NULL)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
